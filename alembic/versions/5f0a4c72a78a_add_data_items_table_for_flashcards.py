"""Add data_items table for flashcards

Revision ID: 5f0a4c72a78a
Revises: 847e16ac23b8
Create Date: 2025-06-03 13:56:45.313555

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5f0a4c72a78a'
down_revision: Union[str, None] = '847e16ac23b8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index('attachments_content_vector_idx', table_name='attachments', postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.drop_index('idx_attachments_workspace_id', table_name='attachments')
    op.drop_index('idx_chats_workspace_id', table_name='chats')
    op.drop_index('idx_messages_chat_id', table_name='messages')
    op.drop_constraint('vectors_source_file_id_fkey', 'vectors', type_='foreignkey')
    op.create_foreign_key(None, 'vectors', 'source_files', ['source_file_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vectors', type_='foreignkey')
    op.create_foreign_key('vectors_source_file_id_fkey', 'vectors', 'source_files', ['source_file_id'], ['id'], ondelete='CASCADE')
    op.create_index('idx_messages_chat_id', 'messages', ['chat_id'], unique=False)
    op.create_index('idx_chats_workspace_id', 'chats', ['workspace_id'], unique=False)
    op.create_index('idx_attachments_workspace_id', 'attachments', ['workspace_id'], unique=False)
    op.create_index('attachments_content_vector_idx', 'attachments', ['content_vector'], unique=False, postgresql_with={'lists': '100'}, postgresql_using='ivfflat')
    op.drop_table('data_items')
    # ### end Alembic commands ###
